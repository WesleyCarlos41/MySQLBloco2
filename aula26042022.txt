/*Crie a tabela tb_classes e determine pelo menos 2 atributos, além da Chave Primária, relevantes para classificar os personagens do Game Online.
Crie a tabela tb_personagens e determine 4 atributos, além da Chave Primária, relevantes aos personagens do Game Online.
Não esqueça de criar a Foreign Key da tabela tb_classes na tabela tb_personagens.
Insira 5 registros na tabela tb_classes.
Insira 8 registros na tabela tb_personagens, preenchendo a Chave Estrangeira para criar a relação com a tabela tb_classes.
Faça um SELECT que retorne todes os personagens cujo poder de ataque seja maior do que 2000.
Faça um SELECT que retorne todes os personagens cujo poder de defesa esteja no intervalo 1000 e 2000.
Faça um SELECT utilizando o operador LIKE, buscando todes os personagens que possuam a letra C no atributo nome.
Faça um SELECT utilizando a cláusula INNER JOIN, unindo os dados da tabela tb_personagens com os dados da tabela tb_classes.
Faça um SELECT utilizando a cláusula INNER JOIN, unindo os dados da tabela tb_personagens com os dados da tabela tb_classes, onde traga apenas os 
personagens que pertençam a uma classe específica (Exemplo: Todes os personagens da classe dos arqueiros).
-------------------Resolução atividade 1-------------*/

CREATE DATABASE db_generation_game_online;
USE db_generation_game_online;

	CREATE TABLE tb_classe(
		id BIGINT AUTO_INCREMENT,
        arquetipo VARCHAR(25),
        arma VARCHAR(25),
        PRIMARY KEY (id)
    );
		INSERT INTO tb_classe (arquetipo,arma) VALUES ("Mago","Fogo");
        INSERT INTO tb_classe (arquetipo,arma) VALUES ("Assassino","Revolver");
        INSERT INTO tb_classe (arquetipo,arma) VALUES ("Guerreiro","Lança");
        INSERT INTO tb_classe (arquetipo,arma) VALUES ("Atirador","Arco e flexa");
        INSERT INTO tb_classe (arquetipo,arma) VALUES ("Espadachim","Espada");
    CREATE TABLE tb_personagem(
		id BIGINT AUTO_INCREMENT,
        nome VARCHAR(25)NOT NULL,
        vida INT(25) NOT NULL,
        ataque INT NOT NULL,
        defesa INT NOT NULL,
        classe_id BIGINT NOT NULL,
        PRIMARY KEY(id),
        FOREIGN KEY (classe_id) REFERENCES tb_classe (id)
	);
		INSERT INTO tb_personagem(nome,vida,ataque,defesa,classe_id)
        VALUES("Merlin",10000,1900,1100,1);
        INSERT INTO tb_personagem(nome,vida,ataque,defesa,classe_id)
        VALUES("Jonh",10000,2000,800,2);
        INSERT INTO tb_personagem(nome,vida,ataque,defesa,classe_id)
        VALUES("Aquiles",10000,2500,2000,3);
        INSERT INTO tb_personagem(nome,vida,ataque,defesa,classe_id)
        VALUES("Americano",10000,2600,900,4);
        INSERT INTO tb_personagem(nome,vida,ataque,defesa,classe_id)
        VALUES("Zoro",10000,2700,1400,5);
        INSERT INTO tb_personagem(nome,vida,ataque,defesa,classe_id)
        VALUES("Luffy",10000,2750,2100,3);
        INSERT INTO tb_personagem(nome,vida,ataque,defesa,classe_id)
        VALUES("Harry",10000,1700,990,1);
        INSERT INTO tb_personagem(nome,vida,ataque,defesa,classe_id)
        VALUES("Helboy",10000,1980,2700,4);
       
       SELECT * FROM tb_personagem WHERE ataque > 2000;
       SELECT * FROM tb_personagem WHERE defesa >= 1000 AND defesa <= 2000;
       SELECT * FROM tb_personagem WHERE nome LIKE "%c%";
       SELECT * FROM tb_personagem INNER JOIN tb_classe ON tb_classe.id = tb_personagem.classe_id;
	   SELECT tb_personagem.nome, tb_classe.arquetipo FROM tb_personagem INNER JOIN tb_classe 
       ON tb_classe.id = tb_personagem.classe_id WHERE tb_classe.arquetipo LIKE "%atirador%";

/*--------------------------------
Crie a tabela tb_categorias e determine pelo menos 2 atributos, além da Chave Primária, relevantes para classificar as pizzas.
Crie a tabela tb_pizzas e determine 4 atributos, além da Chave Primária, relevantes aos produtos da pizzaria.
Não esqueça de criar a Foreign Key da tabela tb_categorias na tabela tb_pizzas.
Insira 5 registros na tabela tb_categorias.
Insira 8 registros na tabela tb_pizzas, preenchendo a Chave Estrangeira para criar a relação com a tabela tb_categorias.
Faça um SELECT que retorne todas as pizzas cujo valor seja maior do que R$ 45,00.
Faça um SELECT que retorne todas as pizzas cujo valor esteja no intervalo R$ 50,00 e R$ 100,00.
Faça um SELECT utilizando o operador LIKE, buscando todas as pizzas que possuam a letra M no atributo nome.
Faça um SELECT utilizando a cláusula INNER JOIN, unindo os dados da tabela tb_pizzas com os dados da tabela tb_categorias.
Faça um SELECT utilizando a cláusula INNER JOIN, unindo os dados da tabela tb_pizzas com os dados da tabela tb_categorias, onde 
traga apenas as pizzas que pertençam a uma categoria específica (Exemplo: Todas as pizzas que são doce).
 -----------Resolução atividade 2---------------*/

CREATE DATABASE db_pizzaria_legal;
USE db_pizzaria_legal;
	CREATE TABLE tb_categoria(
		id BIGINT AUTO_INCREMENT,
        tipo VARCHAR(20),
        tamanho VARCHAR(20),
        PRIMARY KEY(id)
    );
   INSERT INTO tb_categoria(tipo,tamanho)VALUES("Salgada","Grande");
   INSERT INTO tb_categoria(tipo,tamanho)VALUES("doce","Grande");
   INSERT INTO tb_categoria(tipo,tamanho)VALUES("Salgada","Media");
   INSERT INTO tb_categoria(tipo,tamanho)VALUES("Doce","Media");
   INSERT INTO tb_categoria(tipo,tamanho)VALUES("Salgada","Pequena");
   INSERT INTO tb_categoria(tipo,tamanho)VALUES("Doce","Pequena");
	CREATE TABLE tb_pizza(
		id BIGINT AUTO_INCREMENT,
        sabor VARCHAR(20),
        borda BOOLEAN,
        bebida BOOLEAN,
        categoria_id BIGINT,
        preco DOUBLE,
        PRIMARY KEY (id),
        FOREIGN KEY (categoria_id) REFERENCES tb_categoria(id)
    );
    INSERT INTO tb_pizza(sabor,borda,bebida,categoria_id,preco)VALUES("Calabresa",true,true,1,79.00);
    INSERT INTO tb_pizza(sabor,borda,bebida,categoria_id,preco)VALUES("Mussarela",true,true,3,59.00);
    INSERT INTO tb_pizza(sabor,borda,bebida,categoria_id,preco)VALUES("Toscana",false,true,5,39.00);
    INSERT INTO tb_pizza(sabor,borda,bebida,categoria_id,preco)VALUES("banana",false,false,2,68.00);
    INSERT INTO tb_pizza(sabor,borda,bebida,categoria_id,preco)VALUES("Marquerita",true,true,1,89.00);
	INSERT INTO tb_pizza(sabor,borda,bebida,categoria_id,preco)VALUES("Nutela",false,true,6,35.00);
    INSERT INTO tb_pizza(sabor,borda,bebida,categoria_id,preco)VALUES("Batata-frita",true,false,3,49.99);
    INSERT INTO tb_pizza(sabor,borda,bebida,categoria_id,preco)VALUES("Brigadeiro",true,true,4,55.90);
    
    SELECT * FROM tb_pizza WHERE preco > 45.00;
	SELECT * FROM tb_pizza WHERE preco >= 50.00 and preco <=100.00;
    SELECT * FROM tb_pizza WHERE sabor LIKE "%m%";
    SELECT * FROM tb_pizza INNER JOIN tb_categoria ON tb_categoria.id = tb_pizza.categoria_id;
    SELECT tb_categoria.tipo, tb_pizza.sabor FROM tb_pizza INNER JOIN tb_categoria 
    ON tb_categoria.id = tb_pizza.categoria_id WHERE tb_categoria.tipo  LIKE "%Doce%"

/*---------------------------------
Crie a tabela tb_categorias e determine pelo menos 2 atributos, além da Chave Primária, relevantes para classificar os produtos.
Crie a tabela tb_produtos e determine 4 atributos, além da Chave Primária, relevantes aos produtos da farmácia.
Não esqueça de criar a Foreign Key da tabela tb_categorias na tabela tb_produtos.
Insira 5 registros na tabela tb_categorias.
Insira 8 registros na tabela tb_produtos, preenchendo a Chave Estrangeira para criar a relação com a tabela tb_categorias.
Faça um SELECT que retorne todes os produtos cujo valor seja maior do que R$ 50,00.
Faça um SELECT que retorne todes os produtos cujo valor esteja no intervalo R$ 5,00 e R$ 60,00.
Faça um SELECT utilizando o operador LIKE, buscando todes os produtos que possuam a letra C no atributo nome.
Faça um SELECT utilizando a cláusula INNER JOIN, unindo os dados da tabela tb_produtos com os dados da tabela tb_categorias.
Faça um SELECT utilizando a cláusula INNER JOIN, unindo os dados da tabela tb_produtos com os dados da tabela tb_categorias, 
onde traga apenas os produtos que pertençam a uma categoria específica (Exemplo: Todes os produtos que pertencem a categoria cosméticos).
-------------------Resolução atividave 3-----------*/

CREATE DATABASE db_farmacia_bem_estar;
USE db_farmacia_bem_estar;
 CREATE TABLE tb_categoria(
	id BIGINT AUTO_INCREMENT,
    tipo VARCHAR(20),
    faixaEtaria VARCHAR(20),
    PRIMARY KEY (id)
 );
	INSERT INTO tb_categoria (tipo,faixaEtaria)VALUES("Remedio","Adulto");
    INSERT INTO tb_categoria (tipo,faixaEtaria)VALUES("Remedio","pediatrico");
    INSERT INTO tb_categoria (tipo,faixaEtaria)VALUES("Cosmetico","Adulto");
    INSERT INTO tb_categoria (tipo,faixaEtaria)VALUES("Cosmetico","Pediatrico");
    INSERT INTO tb_categoria (tipo,faixaEtaria)VALUES("Vitaminas","Adulto");
    INSERT INTO tb_categoria (tipo,faixaEtaria)VALUES("Vitaminas","Pediatricas");
 CREATE TABLE tb_produtos(
	id BIGINT AUTO_INCREMENT,
    nome VARCHAR(30) NOT NULL,
    marca VARCHAR(20) NOT NULL,
    quantidade VARCHAR(20) NOT NULL,
    preco DOUBLE NOT NULL,
    categoria_id BIGINT NOt NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (categoria_id) REFERENCES tb_categoria(id)
 );
	INSERT INTO tb_produtos (nome,marca,quantidade,preco,categoria_id)VALUES("Shampoo","Dove","1 un",27.99,3);
	INSERT INTO tb_produtos (nome,marca,quantidade,preco,categoria_id)VALUES("Analgesico","Dorflex","6 Comp",5.99,1);
    INSERT INTO tb_produtos (nome,marca,quantidade,preco,categoria_id)VALUES("Protetor solar","Nivea","1 un",38.90,4);
    INSERT INTO tb_produtos (nome,marca,quantidade,preco,categoria_id)VALUES("Amoxilina","EMS","30 Comp",68.89,1);
    INSERT INTO tb_produtos (nome,marca,quantidade,preco,categoria_id)VALUES("Multivitaminico","Centrum","425 CAPS",395.91,5);
    INSERT INTO tb_produtos (nome,marca,quantidade,preco,categoria_id)VALUES("Suplemento infantil","Alpha kids","100 CAPS",110.54,6);
    INSERT INTO tb_produtos (nome,marca,quantidade,preco,categoria_id)VALUES("Anti-alergico","Allegra","60 ML",30.89,2);
    INSERT INTO tb_produtos (nome,marca,quantidade,preco,categoria_id)VALUES("Shampoo","johnson","1 un",45.7,4);
    
    SELECT * FROM tb_produtos WHERE preco > 50;
    SELECT * FROM tb_produtos WHERE preco >= 5 AND preco <= 60;
    SELECT * FROM tb_produtos WHERE nome LIKE "%c%";
    SELECT * FROM tb_produtos INNER JOIN tb_categoria ON tb_categoria.id = tb_produtos.categoria_id;
    SELECT tb_produtos.nome, tb_categoria.tipo FROM tb_produtos INNER JOIN tb_categoria 
    ON tb_categoria.id = tb_produtos.categoria_id WHERE tb_categoria.tipo LIKE "%Cosmetico%"

/*-----------------------------------
Crie a tabela tb_categorias e determine pelo menos 2 atributos, além da Chave Primária, relevantes para classificar os produtos.
Crie a tabela tb_produtos e determine 4 atributos, além da Chave Primária, relevantes aos produtos da farmácia.
Não esqueça de criar a Foreign Key da tabela tb_categorias na tabela tb_produtos.
Insira 5 registros na tabela tb_categorias.
Insira 8 registros na tabela tb_produtos, preenchendo a Chave Estrangeira para criar a relação com a tabela tb_categorias.
Faça um SELECT que retorne todes os produtos cujo valor seja maior do que R$ 50,00.
Faça um SELECT que retorne todes os produtos cujo valor esteja no intervalo R$ 50,00 e R$ 150,00.
Faça um SELECT utilizando o operador LIKE, buscando todes os produtos que possuam a letra C no atributo nome.
Faça um SELECT utilizando a cláusula INNER JOIN, unindo os dados da tabela tb_produtos com os dados da tabela tb_categorias.
Faça um SELECT utilizando a cláusula INNER JOIN, unindo os dados da tabela tb_produtos com os dados da tabela tb_categorias, 
onde traga apenas os produtos que pertençam a uma categoria específica (Exemplo: Todes os produtos que pertencem a categoria aves ou frutas).
--------------- Resolução atividade 4--------------------------*/

CREATE DATABASE db_cidades_das_carnes;
USE db_cidades_das_carnes;
	CREATE TABLE tb_categoria(
		id BIGINT AUTO_INCREMENT,
        tipo VARCHAR(20),
        ativo BOOLEAN,
        PRIMARY KEY (id)
    );
	INSERT INTO tb_categoria (tipo,ativo)VALUES("Bovina",true);
	INSERT INTO tb_categoria (tipo,ativo)VALUES("Suina",true);
	INSERT INTO tb_categoria (tipo,ativo)VALUES("ave",true);
	INSERT INTO tb_categoria (tipo,ativo)VALUES("Peixe",true);
	INSERT INTO tb_categoria (tipo,ativo)VALUES("Derivados",true);
    
    CREATE TABLE tb_produtos(
		id BIGINT AUTO_INCREMENT,
        nome VARCHAR(20) NOT NULL,
        quantidade VARCHAR(20) NOT NULL,
        preco DOUBLE,
        categoria_id BIGINT,
        PRIMARY KEY (id),
        FOREIGN KEY (categoria_id) REFERENCES tb_categoria(id)
    );
    INSERT INTO tb_produtos(nome,quantidade,preco,categoria_id)VALUES("Picanha","1KG",79.99,1);
    INSERT INTO tb_produtos(nome,quantidade,preco,categoria_id)VALUES("Coxinha da asa","1KG",18.9,3);
    INSERT INTO tb_produtos(nome,quantidade,preco,categoria_id)VALUES("Linguiça","1KG",25.89,2);
    INSERT INTO tb_produtos(nome,quantidade,preco,categoria_id)VALUES("Bacalhau","1KG",149.79,4);
    INSERT INTO tb_produtos(nome,quantidade,preco,categoria_id)VALUES("Alcatra","1KG",51.60,1);
    INSERT INTO tb_produtos(nome,quantidade,preco,categoria_id)VALUES("Pão de Alhor","1 UN",13.5,5);
    INSERT INTO tb_produtos(nome,quantidade,preco,categoria_id)VALUES("Pernil","1KG",35.7,2);
    INSERT INTO tb_produtos(nome,quantidade,preco,categoria_id)VALUES("Sobrecoxa","1KG",10.88,3);
    
    SELECT * FROM tb_produtos WHERE preco > 50;
    SELECT * FROM tb_produtos WHERE preco >=50 AND preco <=150;
    SELECT * FROM tb_produtos WHERE nome LIKE "%c%";
    SELECT * FROM tb_produtos INNER JOIN tb_categoria ON tb_categoria.id = tb_produtos.categoria_id;
     SELECT tb_produtos.nome, tb_categoria.tipo FROM tb_produtos INNER JOIN tb_categoria 
    ON tb_categoria.id = tb_produtos.categoria_id WHERE tb_categoria.tipo LIKE "%ave%"

/*--------------------------------------------
Crie a tabela tb_categorias e determine pelo menos 2 atributos, além da Chave Primária, relevantes para classificar os produtos.
Crie a tabela tb_produtos e determine 4 atributos, além da Chave Primária, relevantes aos produtos da farmácia.
Não esqueça de criar a Foreign Key da tabela tb_categorias na tabela tb_produtos.
Insira 5 registros na tabela tb_categorias.
Insira 8 registros na tabela tb_produtos, preenchendo a Chave Estrangeira para criar a relação com a tabela tb_categorias.
Faça um SELECT que retorne todes os produtos cujo valor seja maior do que R$ 100,00.
Faça um SELECT que retorne todes os produtos cujo valor esteja no intervalo R$ 70,00 e R$ 150,00.
Faça um SELECT utilizando o operador LIKE, buscando todes os produtos que possuam a letra C no atributo nome.
Faça um SELECT utilizando a cláusula INNER JOIN, unindo os dados da tabela tb_produtos com os dados da tabela tb_categorias.
Faça um SELECT utilizando a cláusula INNER JOIN, unindo os dados da tabela tb_produtos com os dados da tabela tb_categorias, 
onde traga apenas os produtos que pertençam a uma categoria específica (Exemplo: Todes os produtos que pertencem a categoria hidráulica).
------------- Resolução atividade 5 -----------------*/

CREATE DATABASE db_construindo_vidas;
USE db_construindo_vidas;
CREATE TABLE tb_categoria(
		id BIGINT AUTO_INCREMENT,
        tipo VARCHAR(20),
        ativo BOOLEAN,
        PRIMARY KEY (id)
    );
	INSERT INTO tb_categoria (tipo,ativo)VALUES("Eletrica",true);
	INSERT INTO tb_categoria (tipo,ativo)VALUES("Hidraulica",true);
	INSERT INTO tb_categoria (tipo,ativo)VALUES("Ferragens",true);
	INSERT INTO tb_categoria (tipo,ativo)VALUES("Ferramentas",true);
	INSERT INTO tb_categoria (tipo,ativo)VALUES("EPI",true);
    
    CREATE TABLE tb_produtos(
		id BIGINT AUTO_INCREMENT,
        nome VARCHAR(20) NOT NULL,
        estoque INT NOT NULL,
        preco DOUBLE,
        categoria_id BIGINT,
        PRIMARY KEY (id),
        FOREIGN KEY (categoria_id) REFERENCES tb_categoria(id)
    );
		INSERT INTO tb_produtos(nome,estoque,preco,categoria_id)VALUES("Quadro de luz",30,679.99,1);
        INSERT INTO tb_produtos(nome,estoque,preco,categoria_id)VALUES("Cano PVC",80,19.8,2);
        INSERT INTO tb_produtos(nome,estoque,preco,categoria_id)VALUES("Viga",40,19.79,3);
        INSERT INTO tb_produtos(nome,estoque,preco,categoria_id)VALUES("Chave de fenda",25,12.5,4);
        INSERT INTO tb_produtos(nome,estoque,preco,categoria_id)VALUES("Capacete",11,60.42,5);
        INSERT INTO tb_produtos(nome,estoque,preco,categoria_id)VALUES("Caixa de água",20,490.2,2);
        INSERT INTO tb_produtos(nome,estoque,preco,categoria_id)VALUES("Martelete",5,1200.5,4);
        INSERT INTO tb_produtos(nome,estoque,preco,categoria_id)VALUES("Colete",8,12.00,5);
	SELECT * FROM tb_produtos WHERE preco > 100;
    SELECT * FROM tb_produtos WHERE preco >=70 AND preco <=150;
    SELECT * FROM tb_produtos WHERE nome LIKE "%c%";
	SELECT * FROM tb_produtos INNER JOIN tb_categoria ON tb_categoria.id = tb_produtos.categoria_id;
     SELECT tb_produtos.nome, tb_categoria.tipo FROM tb_produtos INNER JOIN tb_categoria 
    ON tb_categoria.id = tb_produtos.categoria_id WHERE tb_categoria.tipo LIKE "%Hidraulica%"

/*----------------------------
Crie a tabela tb_categorias e determine pelo menos 2 atributos, além da Chave Primária, relevantes para classificar os produtos.
Crie a tabela tb_cursos e determine 4 atributos, além da Chave Primária, relevantes aos produtos da farmácia.
Não esqueça de criar a Foreign Key da tabela tb_categorias na tabela tb_cursos.
Insira 5 registros na tabela tb_categorias.
Insira 8 registros na tabela tb_cursos, preenchendo a Chave Estrangeira para criar a relação com a tabela tb_categorias.
Faça um SELECT que retorne todes os cursos cujo valor seja maior do que R$ 500,00.
Faça um SELECT que retorne todes os cursos cujo valor esteja no intervalo R$ 600,00 e R$ 1000,00.
Faça um SELECT utilizando o operador LIKE, buscando todes os cursos que possuam a letra J no atributo nome.
Faça um SELECT utilizando a cláusula INNER JOIN, unindo os dados da tabela tb_cursos com os dados da tabela tb_categorias.
Faça um SELECT utilizando a cláusula INNER JOIN, unindo os dados da tabela tb_cursos com os dados da tabela tb_categorias, 
onde traga apenas os produtos que pertençam a uma categoria específica (Exemplo: Todes os cursos que pertencem a categoria Java).

--------------------------Resolução atividade 6 ---------------------------- */

CREATE DATABASE db_curso_da_minha_vida;
USE db_curso_da_minha_vida;
	CREATE TABLE tb_categoria(
		id BIGINT AUTO_INCREMENT,
        tipo VARCHAR(20),
        ativo BOOLEAN,
        PRIMARY KEY (id)
    );
	INSERT INTO tb_categoria (tipo,ativo)VALUES("Tecnologia",true);
	INSERT INTO tb_categoria (tipo,ativo)VALUES("Construção civil",true);
	INSERT INTO tb_categoria (tipo,ativo)VALUES("Meio ambiente",true);
	INSERT INTO tb_categoria (tipo,ativo)VALUES("Saúde",true);
	INSERT INTO tb_categoria (tipo,ativo)VALUES("Negócios",true);
    
    CREATE TABLE tb_cursos(
		id BIGINT AUTO_INCREMENT,
        nome VARCHAR(20) NOT NULL,
        horario VARCHAR(20) NOT NULL,
        preco DOUBLE,
        categoria_id BIGINT,
        PRIMARY KEY (id),
        FOREIGN KEY (categoria_id) REFERENCES tb_categoria(id)
    );
    INSERT INTO tb_cursos(nome,horario,preco,categoria_id)VALUES("Administração","Noite",689.60,5);
    INSERT INTO tb_cursos(nome,horario,preco,categoria_id)VALUES("Eletrotecnica","Tarde",479.89,2);
    INSERT INTO tb_cursos(nome,horario,preco,categoria_id)VALUES("Programação","noite",1130.9,1);
    INSERT INTO tb_cursos(nome,horario,preco,categoria_id)VALUES("Enfermagem","manhã",690.87,4);
    INSERT INTO tb_cursos(nome,horario,preco,categoria_id)VALUES("Biologo","Noite",970.4,3);
    INSERT INTO tb_cursos(nome,horario,preco,categoria_id)VALUES("Engenharia civil","Tarde",1600.88,2);
    INSERT INTO tb_cursos(nome,horario,preco,categoria_id)VALUES("Analista","tarde",999.99,1);
    INSERT INTO tb_cursos(nome,horario,preco,categoria_id)VALUES("Gestão ambiental","Noite",850.88,3);
    
    SELECT * FROM tb_cursos WHERE preco > 500;
    SELECT * FROM tb_cursos WHERE preco >= 600 AND preco <=1000;
	SELECT * FROM tb_cursos WHERE nome LIKE "%j%";
    SELECT * FROM tb_cursos INNER JOIN tb_categoria ON tb_categoria.id = tb_cursos.categoria_id;
    SELECT tb_cursos.nome, tb_categoria.tipo FROM tb_cursos INNER JOIN tb_categoria 
    ON tb_categoria.id = tb_cursos.categoria_id WHERE tb_categoria.tipo LIKE "%tecnologia%";
